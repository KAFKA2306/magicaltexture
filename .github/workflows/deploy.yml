name: CI & Deploy to HuggingFace Spaces

on:
  push:
    branches: [ main ]
    paths:
      - "app.py"
      - "requirements.txt"
      - ".github/workflows/**"
      - "assets/**"
  workflow_dispatch:

jobs:
  test:
    name: Lint & Smoke Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}

      - name: Install deps
        run: |
          python -m pip install -U pip
          pip install -r requirements.txt
          pip install flake8

      - name: Lint
        run: flake8 --max-line-length 120 app.py

      - name: Smoke test (import app)
        run: |
          python - << 'PY'
          import importlib.util
          spec = importlib.util.spec_from_file_location("app", "app.py")
          m = importlib.util.module_from_spec(spec)
          spec.loader.exec_module(m)
          print("App import OK")
          PY

      - name: Package artifact
        if: always()
        run: |
          mkdir -p dist
          zip -r dist/pastel-eye-colorizer-${{ github.sha }}.zip app.py requirements.txt README.md || true

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: build-${{ github.sha }}
          path: dist/*.zip

  deploy:
    name: Deploy to HuggingFace Spaces
    needs: test
    # mainブランチ or タグのときに実行（必要に応じ調整）
    if: github.ref_name == 'main' || startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install HuggingFace CLI
        run: |
          python -m pip install -U "huggingface_hub[cli]"

      - name: Upload to Space
        env:
          HF_TOKEN: ${{ secrets.HF_TOKEN }}
          HF_SPACE_ID: ${{ secrets.HF_SPACE_ID }} # e.g. username/pastel-eye-colorizer
        run: |
          test -n "$HF_TOKEN" || (echo "HF_TOKEN not set" && exit 1)
          test -n "$HF_SPACE_ID" || (echo "HF_SPACE_ID not set" && exit 1)
          huggingface-cli login --token "$HF_TOKEN"
          # 必要なファイルのみ転送（.git/.githubは除外）
          huggingface-cli upload . \
            --repo-id "spaces/$HF_SPACE_ID" \
            --repo-type space \
            --include "app.py" "requirements.txt" "assets" \
            --exclude ".git" ".github" --commit-message "CI deploy: $GITHUB_SHA"

      - name: Restart Space (trigger build)
        env:
          HF_TOKEN: ${{ secrets.HF_TOKEN }}
          HF_SPACE_ID: ${{ secrets.HF_SPACE_ID }}
        run: |
          python - << 'PY'
          import os
          from huggingface_hub import HfApi
          api = HfApi(token=os.environ["HF_TOKEN"])
          api.restart_space(repo_id=os.environ["HF_SPACE_ID"])
          print("Space restart triggered")
          PY
