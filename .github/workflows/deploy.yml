name: CI & Deploy to HuggingFace Spaces

on:
  push:
    branches: [ main ]
    paths:
      - "app.py"
      - "requirements.txt"
      - ".github/workflows/**"
      - "assets/**"
  workflow_dispatch:

jobs:
  test:
    name: Lint & Smoke Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}

      - name: Install deps
        run: |
          python -m pip install -U pip
          pip install -r requirements.txt
          pip install flake8

      - name: Lint
        run: flake8 --max-line-length 120 app.py

      - name: Smoke test (import app)
        run: |
          python - << 'PY'
          import importlib.util
          spec = importlib.util.spec_from_file_location("app", "app.py")
          m = importlib.util.module_from_spec(spec)
          spec.loader.exec_module(m)
          print("App import OK")
          PY

      - name: Package artifact
        if: always()
        run: |
          mkdir -p dist
          zip -r dist/pastel-eye-colorizer-${{ github.sha }}.zip app.py requirements.txt README.md || true

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: build-${{ github.sha }}
          path: dist/*.zip



deploy:
    name: Deploy to HuggingFace Spaces
    needs: test
    if: github.ref_name == 'main' || startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    steps:
        - name: Checkout
        uses: actions/checkout@v4

        - name: Set up Python
        uses: actions/setup-python@v5
        with:
            python-version: "3.11"

        - name: Install huggingface_hub
        run: python -m pip install -U huggingface_hub

        - name: Upload to Space via HfApi
        env:
            HF_TOKEN: ${{ secrets.HF_TOKEN }}
            HF_SPACE_ID: ${{ secrets.HF_SPACE_ID }}   # 例: k4fka/magicaltexture
            GITHUB_SHA: ${{ github.sha }}
        run: |
            python - << 'PY'
            import os
            from huggingface_hub import HfApi

            token = os.environ["HF_TOKEN"]
            repo_id = os.environ["HF_SPACE_ID"]
            msg = f"CI deploy: {os.environ.get('GITHUB_SHA','')}"

            api = HfApi(token=token)
            api.upload_folder(
                repo_id=repo_id,
                repo_type="space",
                folder_path=".",          # このリポジトリ直下を送る
                path_in_repo=".",         # Space 直下に配置
                allow_patterns=[
                    "app.py",
                    "requirements.txt",
                    "README.md",
                    "assets/**",
                ],
                ignore_patterns=[
                    ".git/**",
                    ".github/**",
                    "dist/**",
                    "**/__pycache__/**",
                ],
                commit_message=msg,
            )
            print(f"Uploaded to Space: {repo_id}")
            PY

        - name: Restart Space (trigger build)
        env:
            HF_TOKEN: ${{ secrets.HF_TOKEN }}
            HF_SPACE_ID: ${{ secrets.HF_SPACE_ID }}
        run: |
            python - << 'PY'
            import os
            from huggingface_hub import HfApi
            api = HfApi(token=os.environ["HF_TOKEN"])
            api.restart_space(repo_id=os.environ["HF_SPACE_ID"])
            print("Space restart triggered")
            PY
